syntax = "proto3";

package agents.v1;

import "rbt/v1alpha1/options.proto";

////////////////////////////////////////////////////////////////////////

message Agent {
  option (rbt.v1alpha1.state) = {
  };
  repeated Tool available_tools = 1;
  repeated Tool offered_tools = 2;

  reserved "s";
  reserved 3;
}

service AgentMethods {
  rpc Create(CreateRequest) returns (CreateResponse) {
    option (rbt.v1alpha1.method) = {
      writer: {},
    };
  }

  rpc ListTools(ListToolsRequest) returns (ListToolsResponse) {
    option (rbt.v1alpha1.method) = {
      reader: {},
    };
  }

  rpc Invoke(InvokeRequest) returns (InvokeResponse) {
    option (rbt.v1alpha1.method) = {
      workflow: {},
      errors: [ "CallToModelError" ],
    };
  }

  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (rbt.v1alpha1.method) = {
      writer: {},
    };
  }
}

////////////////////////////////////////////////////////////////////////

message Message {
  string role = 1;
  string content = 2;
}

////////////////////////////////////////////////////////////////////////

message Tool {
  string name = 1;
}

////////////////////////////////////////////////////////////////////////

message CreateRequest {}

message CreateResponse {}

////////////////////////////////////////////////////////////////////////

message InvokeRequest {
  string tool_name = 1;
}

message InvokeResponse {
  repeated Message messages = 1;
}

////////////////////////////////////////////////////////////////////////

message ListToolsRequest {}

message ListToolsResponse {
  repeated Tool tools = 1;
}

////////////////////////////////////////////////////////////////////////

message RegisterRequest {
  repeated Tool tools = 1;
}

message RegisterResponse {}

////////////////////////////////////////////////////////////////////////

message CallToModelError {}

////////////////////////////////////////////////////////////////////////